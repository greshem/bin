#!/usr/bin/perl
foreach (<DATA>)
{
	print $_;
}
__DATA__
#2011_03_24_21:41:58   星期四   add by greshem

Proxy：为其他对象提供一个代理以控制对这个对象的访问。 

#==========================================================================
boost 书. 
1. smart_ptr  库, 就是代理模式最佳的应用, 
	scoped_ptr shared_ptr 智能指针 包装了原始的指针, 代理了原始指针的智能 用户只需要 使用智能指针的代理 就可以获得原始指针同样的功能 不用担心资源泄漏，智能指针 控制了原始指针的行为. 
optional ref bind function 都属于代理模式, 都包装了 原始的函数 并提供一定程序的控制. 需要的时候 把消息转发给 原始的函数 或者 对象 完成工作 

#==========================================================================
    按照“四人团”的说法，Proxy模式可以为控制另一个对象而提供一个代理或者占位符。
    这个模式可以使我们在真正需要的时候创建对象，如果我们不需要这个对象，Proxy模式会为我们提供一个占位符。如果我们有大量这样消耗很大的对象的时候，我们就可以使用Proxy模式，初始情况下，Proxy模式只会提供占位符而不会真正创建对象，但是对于使用者来说，他看到是真正的对象而不是一个代理。一旦使用者需要获得或者更改对象属性的时候，Proxy模式就会创建该对象，在此之后，我们就可以通过代理访问真正的对象了。
    和Singleton模式一样，Proxy模式都是保证我们可以按需分配对象，不同的是，Singleton模式还会保证在全局范围内使用同一个对象实例，而Proxy则没有这个功能。
	#--------------------------------------------------------------------------
    在Word里面应该是使用了Proxy模式。打开一篇含图的很长的文档时，大部分的图片都不会被载入，而仅仅是提供占位符，只有当用户准备察看这一页的时候，代理才会真正载入图片。


#==========================================================================
proxy 和adapter有一定类似，都是属于一种衔接性质的。

区别是很明显的，从大体上说：proxy是一种原来对象的代表，其它需要与这个对象打交道的操作都是和这个代表交涉，就象歌星的经纪人一样. 
	被虚拟出来的代表者, 的接口不限, 不会变的. 
adapter目的则不是要虚构出一个代表者，而是为应付特定使用目的，将原来的类进行一些修改, 被虚拟出来的接口一定是特定的. 
